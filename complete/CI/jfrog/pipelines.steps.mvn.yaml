pipelines:
  - name: backapp_mvn
    configuration:
      environmentVariables:
        readOnly:
          myDemoVersion:  2.0.0
          mvnPromoteRepo: ninja-rc-mvn-local
    steps:
      - name: build_backapp_mvn
        type: MvnBuild
        configuration: 
          # runtime:
          #   type: image
          #   image:
          #     custom:
          #       name: drydock/u18java
          #       tag: master
          mvnCommand:  clean package
          sourceLocation:       complete/  #required
          configFileLocation:   CI  #required
          configFileName:       mvn-art-config  #required
          forceXrayScan:        false #optional
          autoPublishBuildInfo: false #optional
          inputResources:
            - name: src_code_backapp_mvn
          integrations:
            - name: artifactory_eu
        execution:
          onSuccess:
            - add_run_variables myAppVersion=`if [[ ${res_src_code_backapp_mvn_isGitTag} == "True" ]]; then echo ${res_src_code_backapp_mvn_gitTagName}; else echo ${myDemoVersion}; fi` 
            - add_run_variables myDockerTag="${myAppVersion}-${res_src_code_backapp_mvn_commitSha}"
            - echo $myAppVersion
            - echo $myDockerTag
          
      - name: publish_bi_backapp_mvn
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: build_backapp_mvn
          outputResources:
            - name: bi_backapp_mvn
        execution:
          onStart:
            - echo "Preparing for Xray scan..."
          onSuccess:
            - echo build name / build number ${res_bi_backapp_mvn_buildName} ${res_bi_backapp_mvn_buildNumber}
      
      - name: scan_backapp_mvn
        type: Bash
        configuration:
          integrations:
            - name: artifactory_eu
          inputResources:
            - name: bi_backapp_mvn
        execution:
          onStart:
            - echo ${res_bi_backapp_mvn_buildName}
            - echo ${res_bi_backapp_mvn_buildNumber}
            - jfrog rt bs ${res_bi_backapp_mvn_buildName} ${res_bi_backapp_mvn_buildNumber} --fail=false

      - name: promote_bi_backapp_mvn
        type: PromoteBuild
        configuration:
          targetRepository: ${mvnPromoteRepo}
          includeDependencies: false
          status: SANDBOX_OK
          comment: Unit testing and Xray scan passed succesfully
          copy: false
          inputResources:
            - name: bi_backapp_mvn
              trigger: true
          inputSteps:
            - name: scan_backapp_mvn
          outputResources:
            - name: pb_backapp_mvn            
            - name: bi_backapp_mvn_promoted_staging
        execution:  
          onStart:
            - echo ${res_bi_backapp_mvn_buildName} 
            - echo ${res_bi_backapp_mvn_buildNumber} 
          onSuccess:
            - jfrog rt sp --build=${res_bi_backapp_mvn_buildName}/${res_bi_backapp_mvn_buildNumber} app-mvn-rc-local/ "app.version=${myAppVersion}"
            - write_output pb_backapp_mvn dockerAppTag=${myDockerTag}
            - write_output pb_backapp_mvn biNumber=${res_bi_backapp_mvn_buildNumber}

  - name: backapp_mvn_docker
    configuration:
      environmentVariables:
        readOnly:
          dockerPushRepo: ninja-dev-docker
          dockerRepoUrl: ninja-dev-docker.artifactory-eu.soleng-emea.jfrog.team
#          myDockerImageName: yannaws-ninja-dev-docker.jfrog.io/backapp-mvn
          myDockerImageName: ${dockerRepoUrl}/backapp-mvn
          dockerPromoteRepo: ninja-rc-docker-local
    steps:
      - name: setup_env
        type: Bash
        configuration:
          affinityGroup: swampup
          runtime:
            type: host
          inputResources:
            - name: pb_backapp_mvn
        execution:
          onExecute:
            - sudo mkdir -p /etc/docker 
            - > 
              sudo jq -n  "{\"insecure-registries\": [\"${dockerRepoUrl}\"]}" > /etc/docker/daemon.json
            - sudo systemctl restart docker
            - sudo cat /etc/docker/daemon.json
            - add_run_variables myTag="2.0.2" #${res_pb_backapp_mvn_dockerAppTag}
            - add_run_variables biNumber=${res_pb_backapp_mvn_biNumber}
      - name: build_backapp_mvn_docker
        type: DockerBuild
        configuration:
          affinityGroup: swampup
          dockerFileName: Dockerfile
          dockerFileLocation: complete/CI/Docker/
          dockerImageName: ${myDockerImageName}
          dockerImageTag: '${myTag}'
          # dockerImageTag: '${res_pb_backapp_mvn_dockerAppTag}'
          inputSteps:
            - name: setup_env
          inputResources:
            - name: src_dockerfile_backapp_mvn
          #   - name: pb_backapp_mvn
            - name: fs_backapp_mvn
          integrations:
            - name: artifactory_eu
        # execution:
        #   onStart:
        #     - echo ${res_pb_backapp_mvn_biNumber}
        #   onSuccess:
        #     - echo "Job well done!"
        #     - echo ${res_pb_backapp_mvn_biNumber}

      - name: publish_backapp_mvn_docker
        type: DockerPush
        configuration:
          affinityGroup: swampup
          targetRepository: ${dockerPushRepo}
          autoPublishBuildInfo: true
          inputSteps:
            - name: build_backapp_mvn_docker
          integrations:
            - name: artifactory_eu
          outputResources:
            - name: bi_backapp_mvn_docker

      - name: scan_bi_backapp_mvn_docker
        type: Bash
        configuration:
          integrations:
            - name: artifactory_eu
          inputResources:
            - name: bi_backapp_mvn_docker
        execution:
          onStart:
            - echo ${res_bi_backapp_mvn_docker_buildName}
            - echo ${res_bi_backapp_mvn_docker_buildNumber}
            - jfrog rt bs ${res_bi_backapp_mvn_docker_buildName} ${res_bi_backapp_mvn_docker_buildNumber} --fail=false

      - name: promote_bi_backapp_mvn_docker
        type: PromoteBuild
        configuration:
          targetRepository: ${dockerPromoteRepo}/
          includeDependencies: false
          status: "DOCKER_SCAN_OK"
          comment: "Xray scan passed succesfully"
          copy: false
          integrations:
            - name: artifactory_eu
          inputResources:
            - name: bi_backapp_mvn_docker
              trigger: true
          inputSteps:
            - name: scan_bi_backapp_mvn_docker
          outputResources:
            - name: bi_backapp_mvn_docker_promoted_staging
        execution:
          onSuccess:
            - jfrog rt sp --build=${res_build_info_docker_backapp_buildName}/${res_build_info_docker_backapp_buildNumber} app-docker-rc-local/**/manifest.json "docker.tag=${myDockerTag}"
            - write_output build_info_docker_backapp_promoted_staging "backregistry=\"${ArtIP}/app-docker-virtual\""
            - write_output build_info_docker_backapp_promoted_staging "backimage=\"backapp\""
            - write_output build_info_docker_backapp_promoted_staging "backtag=${myDockerTag}"
